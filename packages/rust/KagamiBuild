# Description: Systems programming language focused on safety, speed and concurrency
# URL:         https://www.rust-lang.org/
# Maintainer:  protonesso, nagakamira at gmail dot com
# Depends on:  libssh2 curl cmake llvm
# Section:     devel

name=rust
version=1.45.2
bootver=1.43.1
release=1
options=('~emptydirs')
source=("https://static.rust-lang.org/dist/rustc-$version-src.tar.gz"
	"https://portage.smaeul.xyz/distfiles/rust-$bootver-x86_64-gentoo-linux-musl.tar.xz"
	"https://portage.smaeul.xyz/distfiles/rust-$bootver-i686-gentoo-linux-musl.tar.xz"
	"https://portage.smaeul.xyz/distfiles/rust-$bootver-aarch64-gentoo-linux-musl.tar.xz"
	"https://portage.smaeul.xyz/distfiles/rust-$bootver-armv7a-unknown-linux-musleabihf.tar.xz")

clear_vendor_checksums() {
	sed -i 's/\("files":{\)[^}]*/\1/' vendor/$1/.cargo-checksum.json
}

build() {
	export RUSTFLAGS="-C link-args=-lffi"
	export MUSL_ROOT=/usr
	export RUST_BACKTRACE=1

	case $BARCH in
		x86_64)
			export RBTARGET="x86_64-gentoo-linux-musl"
			export RTARGET="x86_64-unknown-linux-musl"
			;;
		i686)
			export RBTARGET="i686-gentoo-linux-musl"
			export RTARGET="i686-unknown-linux-musl"
			;;
		aarch64)
			export RBTARGET="aarch64-gentoo-linux-musl"
			export RTARGET="aarch64-unknown-linux-musl"
			;;
		armv7hnl)
			export RBTARGET="armv7a-unknown-linux-musleabihf"
			export RTARGET="armv7-unknown-linux-musleabihf"
			;;
		*)
			echo "Architecture is not set or is not supported by Rust Language"
			exit 1
	esac

	mkdir -p "$SRC"/rust
	pushd "$SRC"/rust-$bootver-$RBTARGET
		sed -i 's.\\-.-.g' install.sh
		sed -i 's.\\_._.g' install.sh
		bash install.sh \
			--prefix="$SRC/rust" \
			--disable-ldconfig
	popd

	export PATH="$SRC/rust/bin:$PATH"

	cd "$SRC"/rustc-$version-src
	patch -Np1 -i "$STUFF"/rust/musl.patch
	patch -Np1 -i "$STUFF"/rust/libressl.patch

	clear_vendor_checksums openssl-src
	clear_vendor_checksums openssl-sys
	clear_vendor_checksums libc

	rm -rf src/llvm-project

	cat > config.toml <<- EOF
		[llvm]
		link-shared = true

		[build]
		build = "$RBTARGET"
		host = [ "$RTARGET" ]
		target = [ "$RTARGET" ]
		cargo = "$(which cargo)"
		rustc = "$(which rustc)"
		docs = false
		compiler-docs  = false
		extended = true
		submodules = false
		python = "python3"
		locked-deps = true
		vendor = true
		sanitizers = false
		profiler = false
		full-bootstrap = false

		[install]
		prefix = "/usr"

		[rust]
		channel = "stable"
		rpath  = false
		codegen-units = 1
		debuginfo-level = 0
		debug = false
		backtrace = false
		jemalloc = false
		debug-assertions = false
		codegen-tests = false

		[target.$RTARGET]
		llvm-config = "/usr/bin/llvm-config"
		crt-static = false
	EOF

	python3 ./x.py build -j$(nproc)
	DESTDIR="$PKG" python3 ./x.py install -j$(nproc)

	cd "$PKG"/usr/lib

	rm -rf rustlib/{components,manifest-rustc,rust-installer-version}
	ln -sf rustlib/$RTARGET/lib/*.so .

	install -d "$PKG"/usr/share/bash-completion
	mv "$PKG"/etc/bash_completion.d/ "$PKG"/usr/share/bash-completion/completions/
	rm -rf "$PKG"/etc
}
